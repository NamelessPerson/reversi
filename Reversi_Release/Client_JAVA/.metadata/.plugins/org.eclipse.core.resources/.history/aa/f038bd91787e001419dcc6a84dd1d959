import java.io.*;
import javax.swing.*;

public class Reversi {
	
	/* 0 = unplaced
	 * 1 = white
	 * 2 = black
	 */
	int[] Board; 
	Reversi(){
		JFrame window = new JFrame();
		window.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		window.setVisible(true);
		
		Board = new int[64];
		
		for(int i = 0; i < 64; i ++)
			Board[i] = 0;
		/*Initially white,black, black white*/
		Board[rcTo1D(3,3)] = 1; //Assign whites
		Board[rcTo1D(4,4)] = 1;
		Board[rcTo1D(3,4)] = 2; //Assign blacks
		Board[rcTo1D(4,3)] = 2;
	}
	
	void run(){
		while(true){
			
		}
	}
	
	/*This function takes in a row and a column
	 * and returns the integer index into the 1D array
	 * that refers to.
	 */
	
	public int rcToOneD(int r, int c){
		return 8*r + c;
	}
	
	/* This function takes in an integer between 0 an 63 (inclusive)
	 * and returns an array of two integers that correspond to the row and column numbers
	 * 
	 */
	public int[] oneDtoRC(int i){
		int[] returnMe = new int[2];
		returnMe[0] = i / 8;
		returnMe[1] = i % 8;
		return returnMe;
	}
	
	/*Not sure where we want this function, 
	 * writing it here, we can move it later.
	 */
	/* Takes in a move as a location and color and checks whether it is legal on the current board.
	 * 
	 */
	public boolean isLegalMove(int color, int[] move){
		boolean returnMe = false;
		
		/*0 = north, 1 = NE, 2 = E, 3 = SE, 4 = S, 5 = SW, 6 = W, 7 = NW*/
		for ( int i = 0; i < 8; i ++)
		{
			returnMe = returnMe | isLegalMoveHelper(color, i, false);
			if (returnMe = true)
					return returnMe;
		}
		
		return returnMe;
	}
	
	public boolean isLegalMoveHelper(int color, int dir, boolean hasSeenOppositeColor)
	{
		
	}
	
	public static void main(String[] args) {
		Reversi r = new Reversi();
	}

}
